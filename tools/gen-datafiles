#!/usr/bin/env perl
# $Id$
# Generate data files to be distributed with texdoc.
#
# The idea is to use the cache generated by texdoc after reading the TeX Live
# database. We make sure to use the SVN version of texlive.tlpdb (the installed
# version is missing a lot of metadata due to a bug in TLPOBJ, now fixed).
#
# The script manipulates the environment to make sure the right versions and
# path are used.
#
# Manuel Pégourié-Gonnard, 2010. WTFPL v2.
# (Updated 2017, Karl Berry.)

my $usage = <<USAGE;
Usage: $0 [--td=texdoc-path] [--tl=texlive_path] [--dont-check--branch]
USAGE

use warnings 'FATAL' => 'all';
use strict;
use utf8;
use open qw(:std utf8);

BEGIN { (my $dir = $0) =~ s!(.*)/.*!$1!; unshift @INC, $dir; }
use TdTools;

my $conf = TdTools::setup($usage, 1);

# texdoc constants, see constants.tlu
my $cache_name      = 'texdoc/cache-tlpdb.lua'; # relative to TEXMFVAR
my $data_tlpdb_name = 'Data.tlpdb.lua';

# some derived path
my $texlive_tlpdb = "$conf->{texlive_path}/../../tlpkg/texlive.tlpdb";
my $texdoc_scriptdir = "$conf->{texdoc_path}/script";
my $texdoc = "texlua $texdoc_scriptdir/texdoc.tlu -M -l";

# temporary dir for the cache
my $tmp_dir = '/tmp';
-d $tmp_dir and -w $tmp_dir or die "Bad tmpdir";
$ENV{TEXMFVAR} = $tmp_dir;
my $cache_src = "$tmp_dir/$cache_name";

# have texdoc regenerate a fresh cache
unlink($cache_src);
print "running $texdoc to remake cache ...\n";
system("$texdoc texlive-en") == 0 || die "texdoc broken!";

# The new Data.tlpdb.lua is in the cache; move it from there.
my $dest = "$texdoc_scriptdir/$data_tlpdb_name";
system("mv '$cache_src' '$dest'")
== 0 || die "mv($cache_src,$dest) failed: $!";

# now test our new file; move tlpdb to make sure Data.tlpdb is used.
system("mv '$texlive_tlpdb' '$texlive_tlpdb.temp'")
== 0 || die "mv($texlive_tlpdb,.temp) failed: $!";

print "running $texdoc with cache only ...\n";
system("$texdoc texlive-en") == 0 || die "Data.tlpdb broken";

system("mv '$texlive_tlpdb.temp' '$texlive_tlpdb'")
== 0 || die "mv(.temp,$texlive_tlpdb) failed: $!";

# show output file.
system("echo 'generated:'; ls -l '$dest'")

__END__
